@charset "UTF-8";
/*
 * Table of contents   Содержание
 *
 *  0. General Vars, Mixins, Extends
 *  1. Header
 *  2. Menu main
 *  3. Slider
 *  4. 

 *  14.
 *
 */
/* 
$devices: ( 
    mobile_horizontal: 480,
    tablets          : 768,
    desktop          : 1024,
    hi_definition    : 1366
);

$devices_class: ( 

    mobile_horizontal: 'mh_',
    tablets          : 'tb_',
    desktop          : 'ds_',
    hi_definition    : 'hd_'
);
 */
/* 1. Structure elements */
@import url("https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700&subset=cyrillic");
.section {
  width: 100%;
  float: left;
  width: 100%;
  clear: both; }

.container {
  max-width: 1200px;
  padding-left: 10px;
  padding-right: 10px;
  margin: 0 auto;
  box-sizing: border-box;
  position: relative; }

.row {
  margin-left: -10px;
  margin-right: -10px; }

.row-line {
  margin-left: -10px;
  margin-right: -10px;
  font-size: 0; }

.row-flex {
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px; }

.row > div {
  float: left; }

.row-line > div {
  float: none;
  display: inline-block; }

.row-line.middle > div {
  vertical-align: middle; }

.row-line.top > div {
  vertical-align: top; }

.row-line.bottom > div {
  vertical-align: bottom; }

.row-line.baseline > div {
  vertical-align: baseline; }

.row-line.row-reverse {
  direction: rtl; }

.row-line.row-reverse > div {
  direction: ltr; }

/* 1.1.3 flex */
.row-flexbox {
  display: flex;
  margin-left: -10px;
  margin-right: -10px; }

[class*=row-flex].middle {
  align-items: center; }

[class*=row-flex].top {
  align-items: flex-start; }

[class*=row-flex].bottom {
  align-items: flex-end; }

[class*=row-flex].baseline {
  align-items: baseline; }

[class*=row-flex].stretch {
  align-items: stretch; }

@media (min-width: 320px) {
  .mv_offset_0 {
    margin-left: 0; }
  .mv_1 {
    width: 8.33333%; }
  .mv_offset_1 {
    margin-left: 8.33333%; }
  .mv_2 {
    width: 16.66667%; }
  .mv_offset_2 {
    margin-left: 16.66667%; }
  .mv_3 {
    width: 25%; }
  .mv_offset_3 {
    margin-left: 25%; }
  .mv_4 {
    width: 33.33333%; }
  .mv_offset_4 {
    margin-left: 33.33333%; }
  .mv_5 {
    width: 41.66667%; }
  .mv_offset_5 {
    margin-left: 41.66667%; }
  .mv_6 {
    width: 50%; }
  .mv_offset_6 {
    margin-left: 50%; }
  .mv_7 {
    width: 58.33333%; }
  .mv_offset_7 {
    margin-left: 58.33333%; }
  .mv_8 {
    width: 66.66667%; }
  .mv_offset_8 {
    margin-left: 66.66667%; }
  .mv_9 {
    width: 75%; }
  .mv_offset_9 {
    margin-left: 75%; }
  .mv_10 {
    width: 83.33333%; }
  .mv_offset_10 {
    margin-left: 83.33333%; }
  .mv_11 {
    width: 91.66667%; }
  .mv_offset_11 {
    margin-left: 91.66667%; }
  .mv_12 {
    width: 100%; }
  .mv_offset_12 {
    margin-left: 100%; } }

@media (min-width: 480px) {
  .mh_offset_0 {
    margin-left: 0; }
  .mh_1 {
    width: 8.33333%; }
  .mh_offset_1 {
    margin-left: 8.33333%; }
  .mh_2 {
    width: 16.66667%; }
  .mh_offset_2 {
    margin-left: 16.66667%; }
  .mh_3 {
    width: 25%; }
  .mh_offset_3 {
    margin-left: 25%; }
  .mh_4 {
    width: 33.33333%; }
  .mh_offset_4 {
    margin-left: 33.33333%; }
  .mh_5 {
    width: 41.66667%; }
  .mh_offset_5 {
    margin-left: 41.66667%; }
  .mh_6 {
    width: 50%; }
  .mh_offset_6 {
    margin-left: 50%; }
  .mh_7 {
    width: 58.33333%; }
  .mh_offset_7 {
    margin-left: 58.33333%; }
  .mh_8 {
    width: 66.66667%; }
  .mh_offset_8 {
    margin-left: 66.66667%; }
  .mh_9 {
    width: 75%; }
  .mh_offset_9 {
    margin-left: 75%; }
  .mh_10 {
    width: 83.33333%; }
  .mh_offset_10 {
    margin-left: 83.33333%; }
  .mh_11 {
    width: 91.66667%; }
  .mh_offset_11 {
    margin-left: 91.66667%; }
  .mh_12 {
    width: 100%; }
  .mh_offset_12 {
    margin-left: 100%; } }

@media (min-width: 768px) {
  .tb_offset_0 {
    margin-left: 0; }
  .tb_1 {
    width: 8.33333%; }
  .tb_offset_1 {
    margin-left: 8.33333%; }
  .tb_2 {
    width: 16.66667%; }
  .tb_offset_2 {
    margin-left: 16.66667%; }
  .tb_3 {
    width: 25%; }
  .tb_offset_3 {
    margin-left: 25%; }
  .tb_4 {
    width: 33.33333%; }
  .tb_offset_4 {
    margin-left: 33.33333%; }
  .tb_5 {
    width: 41.66667%; }
  .tb_offset_5 {
    margin-left: 41.66667%; }
  .tb_6 {
    width: 50%; }
  .tb_offset_6 {
    margin-left: 50%; }
  .tb_7 {
    width: 58.33333%; }
  .tb_offset_7 {
    margin-left: 58.33333%; }
  .tb_8 {
    width: 66.66667%; }
  .tb_offset_8 {
    margin-left: 66.66667%; }
  .tb_9 {
    width: 75%; }
  .tb_offset_9 {
    margin-left: 75%; }
  .tb_10 {
    width: 83.33333%; }
  .tb_offset_10 {
    margin-left: 83.33333%; }
  .tb_11 {
    width: 91.66667%; }
  .tb_offset_11 {
    margin-left: 91.66667%; }
  .tb_12 {
    width: 100%; }
  .tb_offset_12 {
    margin-left: 100%; } }

@media (min-width: 1024px) {
  .ds_offset_0 {
    margin-left: 0; }
  .ds_1 {
    width: 8.33333%; }
  .ds_offset_1 {
    margin-left: 8.33333%; }
  .ds_2 {
    width: 16.66667%; }
  .ds_offset_2 {
    margin-left: 16.66667%; }
  .ds_3 {
    width: 25%; }
  .ds_offset_3 {
    margin-left: 25%; }
  .ds_4 {
    width: 33.33333%; }
  .ds_offset_4 {
    margin-left: 33.33333%; }
  .ds_5 {
    width: 41.66667%; }
  .ds_offset_5 {
    margin-left: 41.66667%; }
  .ds_6 {
    width: 50%; }
  .ds_offset_6 {
    margin-left: 50%; }
  .ds_7 {
    width: 58.33333%; }
  .ds_offset_7 {
    margin-left: 58.33333%; }
  .ds_8 {
    width: 66.66667%; }
  .ds_offset_8 {
    margin-left: 66.66667%; }
  .ds_9 {
    width: 75%; }
  .ds_offset_9 {
    margin-left: 75%; }
  .ds_10 {
    width: 83.33333%; }
  .ds_offset_10 {
    margin-left: 83.33333%; }
  .ds_11 {
    width: 91.66667%; }
  .ds_offset_11 {
    margin-left: 91.66667%; }
  .ds_12 {
    width: 100%; }
  .ds_offset_12 {
    margin-left: 100%; } }

@media (min-width: 1200px) {
  .hd_offset_0 {
    margin-left: 0; }
  .hd_1 {
    width: 8.33333%; }
  .hd_offset_1 {
    margin-left: 8.33333%; }
  .hd_2 {
    width: 16.66667%; }
  .hd_offset_2 {
    margin-left: 16.66667%; }
  .hd_3 {
    width: 25%; }
  .hd_offset_3 {
    margin-left: 25%; }
  .hd_4 {
    width: 33.33333%; }
  .hd_offset_4 {
    margin-left: 33.33333%; }
  .hd_5 {
    width: 41.66667%; }
  .hd_offset_5 {
    margin-left: 41.66667%; }
  .hd_6 {
    width: 50%; }
  .hd_offset_6 {
    margin-left: 50%; }
  .hd_7 {
    width: 58.33333%; }
  .hd_offset_7 {
    margin-left: 58.33333%; }
  .hd_8 {
    width: 66.66667%; }
  .hd_offset_8 {
    margin-left: 66.66667%; }
  .hd_9 {
    width: 75%; }
  .hd_offset_9 {
    margin-left: 75%; }
  .hd_10 {
    width: 83.33333%; }
  .hd_offset_10 {
    margin-left: 83.33333%; }
  .hd_11 {
    width: 91.66667%; }
  .hd_offset_11 {
    margin-left: 91.66667%; }
  .hd_12 {
    width: 100%; }
  .hd_offset_12 {
    margin-left: 100%; } }

[class*="hd_"],
[class*="ds_"],
[class*="tb_"],
[class*="mh_"],
[class*="mv_"] {
  box-sizing: border-box;
  padding-left: 10px;
  padding-right: 10px;
  position: relative;
  min-height: 1px; }

/* 4. Вспомогательные структурные элементы */
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " ";
  box-sizing: border-box; }

.container:after,
.row:after {
  clear: both; }

/* 4. Утилиты адаптации  */
@media (max-width: 319px) {
  .container .mv_hidden {
    display: none; } }

@media (max-width: 479px) {
  .container .mh_hidden {
    display: none; } }

@media (max-width: 767px) {
  .container .tb_hidden {
    display: none; } }

@media (max-width: 1023px) {
  .container .ds_hidden {
    display: none; } }

@media (max-width: 1199px) {
  .container .hd_hidden {
    display: none; } }

/* 5. Text utulites  */
.lefted {
  text-align: left; }

.righted {
  text-align: right; }

.centered {
  text-align: center; }

.justifyed {
  text-align: justify; }

@media (min-width: 320px) {
  .mv_lefted {
    text-align: left; }
  .mv_righted {
    text-align: right; }
  .mv_centered {
    text-align: center; }
  .mv_justifyed {
    text-align: justify; } }

@media (min-width: 480px) {
  .mh_lefted {
    text-align: left; }
  .mh_righted {
    text-align: right; }
  .mh_centered {
    text-align: center; }
  .mh_justifyed {
    text-align: justify; } }

@media (min-width: 768px) {
  .tb_lefted {
    text-align: left; }
  .tb_righted {
    text-align: right; }
  .tb_centered {
    text-align: center; }
  .tb_justifyed {
    text-align: justify; } }

@media (min-width: 1024px) {
  .ds_lefted {
    text-align: left; }
  .ds_righted {
    text-align: right; }
  .ds_centered {
    text-align: center; }
  .ds_justifyed {
    text-align: justify; } }

@media (min-width: 1200px) {
  .hd_lefted {
    text-align: left; }
  .hd_righted {
    text-align: right; }
  .hd_centered {
    text-align: center; }
  .hd_justifyed {
    text-align: justify; } }

@font-face {
  font-family: "myfont";
  src: url("fonts/myfont.eot?") format("eot"), url("fonts/myfont.woff2") format("woff2"), url("fonts/myfont.woff") format("woff"), url("fonts/myfont.ttf") format("truetype"), url("fonts/myfont.svg#myfont") format("svg"); }

@font-face {
  font-family: "themify";
  src: url("../fonts/themify/themify.eot");
  src: url("../fonts/themify/themify.eot?#iefix") format("eot"), url("../fonts/themify/themify.woff2") format("woff2"), url("../fonts/themify/themify.woff") format("woff"), url("../fonts/themify/themify.ttf") format("truetype"), url("../fonts/themify/themify.svg#themify") format("svg"); }

.themify:before, body .owl-carousel .owl-nav button.owl-prev span:before,
body .owl-carousel .owl-nav button.owl-next span:before {
  font-family: "themify";
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  /* speak: none; only necessary if not using the private unicode range (firstGlyph option) */
  text-decoration: none;
  text-transform: none; }

.themify-angle-right:before, body .owl-carousel .owl-nav button.owl-prev.owl-prev span:before,
body .owl-carousel .owl-nav button.owl-next.owl-next span:before {
  content: "\EA01"; }

.themify-close:before {
  content: "\EA02"; }

.themify-comments-smiley:before {
  content: "\EA03"; }

.themify-credit-card:before {
  content: "\EA04"; }

.themify-email:before {
  content: "\EA05"; }

.themify-gift:before {
  content: "\EA06"; }

.themify-headphone-alt:before {
  content: "\EA07"; }

.themify-heart:before {
  content: "\EA08"; }

.themify-layout-column3-alt:before {
  content: "\EA09"; }

.themify-layout-grid2:before {
  content: "\EA0A"; }

.themify-layout-grid3-alt:before {
  content: "\EA0B"; }

.themify-menu:before {
  content: "\EA0C"; }

.themify-minus:before {
  content: "\EA0D"; }

.themify-plus:before {
  content: "\EA0E"; }

.themify-search:before {
  content: "\EA0F"; }

.themify-shopping-cart-full:before {
  content: "\EA10"; }

.themify-shopping-cart:before {
  content: "\EA11"; }

.themify-truck:before {
  content: "\EA12"; }

.themify-user:before {
  content: "\EA13"; }

.themify-view-list:before {
  content: "\EA14"; }

/*
 * hexagon( ширина, цвет бг, бордер-ширина, бордер-цвет ){}
*/
/*
 * .Base
 *
*/
/*
 * Variables
*/
/* Colors */
/* Fonts */
/*
 * Mixins
*/
/*
 * Extends
*/
.menu-top {
  float: left;
  width: 100%; }

.submenu-top, .users__form-outer, .search-modal, .submenu {
  box-shadow: 0 0 8px 0px rgba(53, 52, 55, 0.25); }

.menu-top-trigger, .menu-top > li > a, .submenu-top li a, .users__item {
  display: block;
  color: #353437;
  font-weight: 300;
  font-size: 0.84034rem;
  line-height: inherit;
  color: #77757b; }

.actions__item-link, .categories__item-link, .news__item-link {
  color: #353437; }
  .actions__item-link:hover, .categories__item-link:hover, .news__item-link:hover {
    color: #1b72ae; }

.actions__item-link, .categories__item-link, .news__item-link {
  position: relative; }
  .actions__item-link i.themify, .categories__item-link i.themify, .news__item-link i.themify {
    content: "";
    position: absolute;
    right: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 1rem;
    font-size: 85%; }

/*
 * Mixins
*/
/*
 * Mixins
*/
/*
 * Base
*/
html {
  font-size: 14px;
  height: 100%; }

body {
  font-size: inherit;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  height: 100%;
  margin: 0;
  font-weight: 300; }

* {
  box-sizing: border-box; }

a {
  text-decoration: none; }

ul, ol {
  margin: 0;
  padding: 0;
  list-style: none; }

h1, h2, h3, h4,
.h1, .h2, .h3, .h4 {
  margin: 0;
  line-height: 1.2em;
  font-family: "Roboto", Tahoma, Arial, sans-serif; }

h1, .h1 {
  font-size: 2.00534rem; }

h2, .h2 {
  font-size: 1.68516rem; }

h3, .h3 {
  font-size: 1.4161rem; }

h4, .h4 {
  font-size: 1.19rem; }

p {
  margin-top: 0;
  margin-bottom: 1em;
  font-size: 1rem;
  line-height: 1.5em;
  font-weight: 300; }

img {
  display: block;
  max-width: 100%;
  width: 100%;
  height: auto; }

.themify:before, body .owl-carousel .owl-nav button.owl-prev span:before,
body .owl-carousel .owl-nav button.owl-next span:before,
.themify:after,
body .owl-carousel .owl-nav button.owl-prev span:after,
body .owl-carousel .owl-nav button.owl-next span:after {
  vertical-align: middle;
  display: block; }

/*
 * Components
 *
*/
/*
 * 1. Buttons
 * 2. Forms elements
 * 3. Components 
*/
/*
 * 1. Buttons
*/
.button {
  display: inline-block;
  text-align: center;
  position: relative;
  overflow: hidden; }

.button-buy {
  width: 100%;
  max-width: 180px;
  padding: 0.5em 1em;
  background: #2491dd;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff; }
  .button-buy:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, #1b72ae, #2491dd);
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-buy:hover:before, .button-buy.hover:before {
    margin-left: 0; }
  .button-buy:active:before, .button-buy.active:before {
    margin-left: 0;
    background: #1b72ae; }
  .button-buy:disabled, .button-buy.disabled {
    border-color: #9b999e;
    background: #d6d5d7;
    color: #9b999e; }
    .button-buy:disabled:before, .button-buy.disabled:before {
      margin-left: -100%; }
  .button-buy span {
    position: relative; }

.button-buy--small {
  padding: 0 !important;
  display: block;
  font-size: 1rem;
  line-height: 1.5em;
  width: 2.625em;
  height: 2.625em; }
  .button-buy--small i {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    font-size: 1.19rem;
    position: absolute;
    z-index: 1000; }

.button-send {
  width: 100%;
  max-width: 180px;
  padding: 0.5em 1em;
  background: #5daee6;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff; }
  .button-send:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, #1b72ae, #5daee6);
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-send:hover:before, .button-send.hover:before {
    margin-left: 0; }
  .button-send:active:before, .button-send.active:before {
    margin-left: 0;
    background: #1b72ae; }
  .button-send:disabled, .button-send.disabled {
    border-color: #9b999e;
    background: #d6d5d7;
    color: #9b999e; }
    .button-send:disabled:before, .button-send.disabled:before {
      margin-left: -100%; }
  .button-send span {
    position: relative; }

/* 
.button-filter{

    width: 100%;
    max-width: 180px;
    padding: $l_h / 3  1em;
    // padding: 0.5em  1em;
    // background: $accent;
    border: 1px solid $accent_dark;

    font-size: $fb;
    line-height: $l_h;
    letter-spacing: $l_s_big;
    color: $white;
    // color: transparent;

    background: linear-gradient(to right, $accent, $accent );
    transition: all 2s ease-in-out;

    &:hover,
    &.hover{

        background: linear-gradient(to right, $grey, $accent );

    }

    &:active,
    &.active{

        background: linear-gradient(to right, $grey, $grey );

    }


} */
/*
 * 2. Forms elements
*/
input,
textarea {
  width: 100%;
  background-color: #ffffff;
  margin: 0;
  line-height: 1.5em;
  font-family: "Roboto", Verdana, Arial, sans-serif;
  font-weight: 300; }

input.field-text {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 20px;
  padding-right: 20px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  max-width: 240px;
  font-size: 1rem;
  border: 1px solid #d6d5d7;
  color: #353437; }
  input.field-text:focus, input.field-text.focus {
    border-color: #2491dd;
    border-color: #2491dd; }
  input.field-text.error {
    border-color: #ae1b28;
    border-color: #ae1b28;
    background-color: rgba(174, 27, 40, 0.05); }

textarea.textarea {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 20px;
  padding-right: 20px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  max-width: 440px;
  min-height: 6em;
  resize: vertical;
  max-height: 50vh;
  font-size: 1rem;
  border: 1px solid #d6d5d7;
  color: #353437; }
  textarea.textarea:focus, textarea.textarea.focus {
    border-color: #2491dd;
    border-color: #2491dd; }

label,
.label {
  font-size: 0.84034rem;
  line-height: 1.5em; }

input[type="checkbox"] + label,
input.field-checkbox + label, input[type="radio"] + label,
input.field-radio + label {
  position: relative;
  padding-left: 2em; }
  input[type="checkbox"] + label:before,
  input.field-checkbox + label:before, input[type="radio"] + label:before,
  input.field-radio + label:before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 1em;
    height: 1em;
    border: 1px solid #2491dd; }
  input[type="checkbox"] + label:hover:before,
  input.field-checkbox + label:hover:before, input[type="radio"] + label:hover:before,
  input.field-radio + label:hover:before, input[type="checkbox"] + label.hover:before,
  input.field-checkbox + label.hover:before, input[type="radio"] + label.hover:before,
  input.field-radio + label.hover:before {
    border: 1px solid #1b72ae; }
  input[type="checkbox"] + label:checked:before,
  input.field-checkbox + label:checked:before, input[type="radio"] + label:checked:before,
  input.field-radio + label:checked:before, input[type="checkbox"] + label.checked:before,
  input.field-checkbox + label.checked:before, input[type="radio"] + label.checked:before,
  input.field-radio + label.checked:before {
    border: 1px solid #1b72ae;
    background: linear-gradient(to right, #1b72ae, #2491dd); }

input[type="checkbox"],
input.field-checkbox {
  opacity: 0.5;
  display: none; }
  input[type="checkbox"] + label,
  input.field-checkbox + label {
    display: block;
    font-size: 1rem;
    line-height: normal;
    /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);

            width: 1em;
            height: 1em;
            border: 1px solid $accent;
        }

        &:hover:before,
        &.hover:before {
            border: 1px solid $accent_dark;  
        }

        &:checked:before,
        &.checked:before {
            border: 1px solid $accent_dark;
            background: linear-gradient(to right, $accent_dark, $accent);    
        }  
 */ }
  input[type="checkbox"]:checked + label:before, input[type="checkbox"]:checked + label:before,
  input.field-checkbox:checked + label:before,
  input.field-checkbox:checked + label:before {
    border: 1px solid #1b72ae;
    background: linear-gradient(to right, #1b72ae, #2491dd); }

input[type="radio"],
input.field-radio {
  opacity: 0.5;
  display: none; }
  input[type="radio"] + label,
  input.field-radio + label {
    display: block;
    font-size: 1rem;
    line-height: normal;
    position: relative;
    padding-left: 2em;
    /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);

            width: 1em;
            height: 1em;
            border: 1px solid $accent;

            border-radius: 50%;
        }

        &:hover:before,
        &.hover:before {
            border: 1px solid $accent_dark;   
        }

        &:checked:before,
        &.checked:before {
            border: 1px solid $accent_dark;
            background: linear-gradient(to right, $accent_dark, $accent);    
        }        
 */ }
    input[type="radio"] + label:before,
    input.field-radio + label:before {
      border-radius: 50%; }
  input[type="radio"]:checked + label:before, input[type="radio"]:checked + label:before,
  input.field-radio:checked + label:before,
  input.field-radio:checked + label:before {
    border: 1px solid #1b72ae;
    background: linear-gradient(to right, #1b72ae, #2491dd); }

/*
 * 3. Components
*/
.select {
  border: 1px solid #2491dd; }
  .select__title {
    line-height: 1.5em;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 20px;
    padding-right: 20px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    position: relative;
    padding-right: 2rem;
    color: #77757b; }
    .select__title .themify, .select__title body .owl-carousel .owl-nav button.owl-prev span, body .owl-carousel .owl-nav button.owl-prev .select__title span,
    .select__title body .owl-carousel .owl-nav button.owl-next span, body .owl-carousel .owl-nav button.owl-next .select__title span {
      content: "";
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translateY(-50%) rotate(-90deg);
              transform: translateY(-50%) rotate(-90deg);
      font-size: 0.84034rem;
      color: #77757b;
      margin-right: 1rem; }
  .select__list-item {
    line-height: 1.5em;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 20px;
    padding-right: 20px;
    padding-left: 1.25rem;
    padding-right: 1.25rem;
    color: #353437; }
    .select__list-item:hover, .select__list-item.hover {
      background: linear-gradient(to right, #2491dd, #5daee6);
      color: #ffffff; }
  .select--closed {
    border-color: #d6d5d7; }
  .select--closed .select__title .themify, .select--closed .select__title body .owl-carousel .owl-nav button.owl-prev span, body .owl-carousel .owl-nav button.owl-prev .select--closed .select__title span,
  .select--closed .select__title body .owl-carousel .owl-nav button.owl-next span, body .owl-carousel .owl-nav button.owl-next .select--closed .select__title span {
    -webkit-transform: translateY(-50%) rotate(90deg);
            transform: translateY(-50%) rotate(90deg); }
  .select--closed .select__list {
    display: none; }

.range {
  width: 100%;
  max-width: 200px;
  height: 4px;
  background-color: #d6d5d7; }
  .range__scale {
    position: relative;
    height: 4px;
    background-color: #2491dd; }
  .range__handle {
    position: relative;
    font-size: 1rem; }
    .range__handle--min {
      position: absolute;
      left: 0;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%); }
    .range__handle--max {
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translate(50%, -50%);
              transform: translate(50%, -50%); }
    .range__handle .hexagon {
      display: inline-block;
      width: 1.2em;
      height: 0.69288em;
      margin: 0.34644em 0;
      background-color: #ffffff;
      border-left: solid 1px #2491dd;
      border-right: solid 1px #2491dd;
      position: relative;
      box-sizing: border-box; }
      .range__handle .hexagon:before, .range__handle .hexagon:after {
        content: "";
        position: absolute;
        z-index: 100;
        width: 0.84852em;
        height: 0.84852em;
        -webkit-transform: scaleY(0.5774) rotate(-45deg);
                transform: scaleY(0.5774) rotate(-45deg);
        left: calc(0.146447 * 1.2em - 1px);
        background-color: inherit;
        box-sizing: border-box; }
      .range__handle .hexagon:before {
        top: -0.42426em;
        border-top: solid 1.4142px #2491dd;
        border-right: solid 1.4142px #2491dd; }
      .range__handle .hexagon:after {
        bottom: -0.42426em;
        border-bottom: solid 1.4142px #2491dd;
        border-left: solid 1.4142px #2491dd; }

.search {
  padding-right: 60px;
  position: relative; }
  .search__field {
    max-width: none !important; }
  .search__button {
    width: 60px;
    position: absolute;
    right: 0;
    top: 0; }

.button-search {
  padding: 0.5em 1em;
  border: 1px solid #1b72ae;
  font-size: 1rem;
  line-height: 1.5em;
  letter-spacing: 0.05em;
  color: #ffffff;
  background: linear-gradient(to right, #2491dd, #2491dd); }
  .button-search:before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to right, #1b72ae, #2491dd);
    transition: all 0.3s ease-in-out;
    margin-left: -100%; }
  .button-search:hover:before, .button-search.hover:before {
    margin-left: 0; }
  .button-search .themify, .button-search body .owl-carousel .owl-nav button.owl-prev span, body .owl-carousel .owl-nav button.owl-prev .button-search span,
  .button-search body .owl-carousel .owl-nav button.owl-next span, body .owl-carousel .owl-nav button.owl-next .button-search span {
    position: relative;
    font-size: 1.19rem;
    z-index: zindex_icon; }

.button-menu .hamburger {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.button-menu {
  line-height: 1.5em;
  padding-top: 0.5em;
  padding-bottom: 0.5em;
  padding-left: 20px;
  padding-right: 20px;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  position: relative;
  box-sizing: border-box;
  width: 50px;
  height: 50px;
  font-size: 1.19rem;
  background-color: #2491dd;
  border: 1px solid #d6d5d7;
  color: transparent; }

.section-component {
  margin: 3em 0; }

@media (min-width: 768px) {
  html {
    font-size: 16px; } }

/* media end*/
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
.hamburger {
  padding: 0 px 0px;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, -webkit-filter;
  transition-property: opacity, filter;
  transition-property: opacity, filter, -webkit-filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible; }
  .hamburger:hover {
    opacity: 0.7; }
  .hamburger.is-active:hover {
    opacity: 0.7; }
  .hamburger.is-active .hamburger-inner,
  .hamburger.is-active .hamburger-inner::before,
  .hamburger.is-active .hamburger-inner::after {
    background-color: #fff; }

.hamburger-box {
  width: 24px;
  height: 15px;
  display: inline-block;
  position: relative; }

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: -0.5px; }
  .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
    width: 24px;
    height: 1px;
    background-color: #fff;
    border-radius: 1px;
    position: absolute;
    transition-property: -webkit-transform;
    transition-property: transform;
    transition-property: transform, -webkit-transform;
    transition-duration: 0.15s;
    transition-timing-function: ease; }
  .hamburger-inner::before, .hamburger-inner::after {
    content: "";
    display: block; }
  .hamburger-inner::before {
    top: -7px; }
  .hamburger-inner::after {
    bottom: -7px; }

/*
   * 3DX
   */
.hamburger--3dx .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dx .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dx .hamburger-inner::before, .hamburger--3dx .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dx.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg); }
  .hamburger--3dx.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dx.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * 3DX Reverse
   */
.hamburger--3dx-r .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dx-r .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dx-r .hamburger-inner::before, .hamburger--3dx-r .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dx-r.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateY(-180deg);
          transform: rotateY(-180deg); }
  .hamburger--3dx-r.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dx-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * 3DY
   */
.hamburger--3dy .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dy .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dy .hamburger-inner::before, .hamburger--3dy .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dy.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateX(-180deg);
          transform: rotateX(-180deg); }
  .hamburger--3dy.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dy.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * 3DY Reverse
   */
.hamburger--3dy-r .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dy-r .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dy-r .hamburger-inner::before, .hamburger--3dy-r .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dy-r.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateX(180deg);
          transform: rotateX(180deg); }
  .hamburger--3dy-r.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dy-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * 3DXY
   */
.hamburger--3dxy .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dxy .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dxy .hamburger-inner::before, .hamburger--3dxy .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dxy.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateX(180deg) rotateY(180deg);
          transform: rotateX(180deg) rotateY(180deg); }
  .hamburger--3dxy.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dxy.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * 3DXY Reverse
   */
.hamburger--3dxy-r .hamburger-box {
  -webkit-perspective: 48px;
          perspective: 48px; }

.hamburger--3dxy-r .hamburger-inner {
  transition: background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
  transition: transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1), background-color 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0.15s cubic-bezier(0.645, 0.045, 0.355, 1); }
  .hamburger--3dxy-r .hamburger-inner::before, .hamburger--3dxy-r .hamburger-inner::after {
    transition: -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1);
    transition: transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1), -webkit-transform 0s 0.1s cubic-bezier(0.645, 0.045, 0.355, 1); }

.hamburger--3dxy-r.is-active .hamburger-inner {
  background-color: transparent !important;
  -webkit-transform: rotateX(180deg) rotateY(180deg) rotateZ(-180deg);
          transform: rotateX(180deg) rotateY(180deg) rotateZ(-180deg); }
  .hamburger--3dxy-r.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--3dxy-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
            transform: translate3d(0, -7px, 0) rotate(-45deg); }

/*
   * Arrow
   */
.hamburger--arrow.is-active .hamburger-inner::before {
  -webkit-transform: translate3d(-4.8px, 0, 0) rotate(-45deg) scale(0.7, 1);
          transform: translate3d(-4.8px, 0, 0) rotate(-45deg) scale(0.7, 1); }

.hamburger--arrow.is-active .hamburger-inner::after {
  -webkit-transform: translate3d(-4.8px, 0, 0) rotate(45deg) scale(0.7, 1);
          transform: translate3d(-4.8px, 0, 0) rotate(45deg) scale(0.7, 1); }

/*
   * Arrow Right
   */
.hamburger--arrow-r.is-active .hamburger-inner::before {
  -webkit-transform: translate3d(4.8px, 0, 0) rotate(45deg) scale(0.7, 1);
          transform: translate3d(4.8px, 0, 0) rotate(45deg) scale(0.7, 1); }

.hamburger--arrow-r.is-active .hamburger-inner::after {
  -webkit-transform: translate3d(4.8px, 0, 0) rotate(-45deg) scale(0.7, 1);
          transform: translate3d(4.8px, 0, 0) rotate(-45deg) scale(0.7, 1); }

/*
   * Arrow Alt
   */
.hamburger--arrowalt .hamburger-inner::before {
  transition: top 0.1s 0.1s ease, -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt .hamburger-inner::after {
  transition: bottom 0.1s 0.1s ease, -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt.is-active .hamburger-inner::before {
  top: 0;
  -webkit-transform: translate3d(-4.8px, -6px, 0) rotate(-45deg) scale(0.7, 1);
          transform: translate3d(-4.8px, -6px, 0) rotate(-45deg) scale(0.7, 1);
  transition: top 0.1s ease, -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22), -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

.hamburger--arrowalt.is-active .hamburger-inner::after {
  bottom: 0;
  -webkit-transform: translate3d(-4.8px, 6px, 0) rotate(45deg) scale(0.7, 1);
          transform: translate3d(-4.8px, 6px, 0) rotate(45deg) scale(0.7, 1);
  transition: bottom 0.1s ease, -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22), -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

/*
   * Arrow Alt Right
   */
.hamburger--arrowalt-r .hamburger-inner::before {
  transition: top 0.1s 0.1s ease, -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: top 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt-r .hamburger-inner::after {
  transition: bottom 0.1s 0.1s ease, -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1);
  transition: bottom 0.1s 0.1s ease, transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1), -webkit-transform 0.1s cubic-bezier(0.165, 0.84, 0.44, 1); }

.hamburger--arrowalt-r.is-active .hamburger-inner::before {
  top: 0;
  -webkit-transform: translate3d(4.8px, -6px, 0) rotate(45deg) scale(0.7, 1);
          transform: translate3d(4.8px, -6px, 0) rotate(45deg) scale(0.7, 1);
  transition: top 0.1s ease, -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: top 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22), -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

.hamburger--arrowalt-r.is-active .hamburger-inner::after {
  bottom: 0;
  -webkit-transform: translate3d(4.8px, 6px, 0) rotate(-45deg) scale(0.7, 1);
          transform: translate3d(4.8px, 6px, 0) rotate(-45deg) scale(0.7, 1);
  transition: bottom 0.1s ease, -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22);
  transition: bottom 0.1s ease, transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22), -webkit-transform 0.1s 0.1s cubic-bezier(0.895, 0.03, 0.685, 0.22); }

/*
   * Arrow Turn
   */
.hamburger--arrowturn.is-active .hamburger-inner {
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg); }
  .hamburger--arrowturn.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(8px, 0, 0) rotate(45deg) scale(0.7, 1);
            transform: translate3d(8px, 0, 0) rotate(45deg) scale(0.7, 1); }
  .hamburger--arrowturn.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(8px, 0, 0) rotate(-45deg) scale(0.7, 1);
            transform: translate3d(8px, 0, 0) rotate(-45deg) scale(0.7, 1); }

/*
   * Arrow Turn Right
   */
.hamburger--arrowturn-r.is-active .hamburger-inner {
  -webkit-transform: rotate(-180deg);
          transform: rotate(-180deg); }
  .hamburger--arrowturn-r.is-active .hamburger-inner::before {
    -webkit-transform: translate3d(-8px, 0, 0) rotate(-45deg) scale(0.7, 1);
            transform: translate3d(-8px, 0, 0) rotate(-45deg) scale(0.7, 1); }
  .hamburger--arrowturn-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(-8px, 0, 0) rotate(45deg) scale(0.7, 1);
            transform: translate3d(-8px, 0, 0) rotate(45deg) scale(0.7, 1); }

/*
   * Boring
   */
.hamburger--boring .hamburger-inner, .hamburger--boring .hamburger-inner::before, .hamburger--boring .hamburger-inner::after {
  transition-property: none; }

.hamburger--boring.is-active .hamburger-inner {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg); }
  .hamburger--boring.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0; }
  .hamburger--boring.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }

/*
   * Collapse
   */
.hamburger--collapse .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--collapse .hamburger-inner::after {
    top: -14px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear; }
  .hamburger--collapse .hamburger-inner::before {
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--collapse.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
          transform: translate3d(0, -7px, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--collapse.is-active .hamburger-inner::after {
    top: 0;
    opacity: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear; }
  .hamburger--collapse.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Collapse Reverse
   */
.hamburger--collapse-r .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0.13s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--collapse-r .hamburger-inner::after {
    top: -14px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0.1s linear; }
  .hamburger--collapse-r .hamburger-inner::before {
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.12s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--collapse-r.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, -7px, 0) rotate(45deg);
          transform: translate3d(0, -7px, 0) rotate(45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--collapse-r.is-active .hamburger-inner::after {
    top: 0;
    opacity: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0.1s 0.22s linear; }
  .hamburger--collapse-r.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.16s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.25s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Elastic
   */
.hamburger--elastic .hamburger-inner {
  top: 0.5px;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55); }
  .hamburger--elastic .hamburger-inner::before {
    top: 7px;
    transition: opacity 0.125s 0.275s ease; }
  .hamburger--elastic .hamburger-inner::after {
    top: 14px;
    transition: -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55), -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.hamburger--elastic.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, 7px, 0) rotate(135deg);
          transform: translate3d(0, 7px, 0) rotate(135deg);
  transition-delay: 0.075s; }
  .hamburger--elastic.is-active .hamburger-inner::before {
    transition-delay: 0s;
    opacity: 0; }
  .hamburger--elastic.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -14px, 0) rotate(-270deg);
            transform: translate3d(0, -14px, 0) rotate(-270deg);
    transition-delay: 0.075s; }

/*
   * Elastic Reverse
   */
.hamburger--elastic-r .hamburger-inner {
  top: 0.5px;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55); }
  .hamburger--elastic-r .hamburger-inner::before {
    top: 7px;
    transition: opacity 0.125s 0.275s ease; }
  .hamburger--elastic-r .hamburger-inner::after {
    top: 14px;
    transition: -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55), -webkit-transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55); }

.hamburger--elastic-r.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, 7px, 0) rotate(-135deg);
          transform: translate3d(0, 7px, 0) rotate(-135deg);
  transition-delay: 0.075s; }
  .hamburger--elastic-r.is-active .hamburger-inner::before {
    transition-delay: 0s;
    opacity: 0; }
  .hamburger--elastic-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -14px, 0) rotate(270deg);
            transform: translate3d(0, -14px, 0) rotate(270deg);
    transition-delay: 0.075s; }

/*
   * Emphatic
   */
.hamburger--emphatic {
  overflow: hidden; }
  .hamburger--emphatic .hamburger-inner {
    transition: background-color 0.125s 0.175s ease-in; }
    .hamburger--emphatic .hamburger-inner::before {
      left: 0;
      transition: top 0.05s 0.125s linear, left 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335);
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in;
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335); }
    .hamburger--emphatic .hamburger-inner::after {
      top: 7px;
      right: 0;
      transition: top 0.05s 0.125s linear, right 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335);
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in;
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335); }
  .hamburger--emphatic.is-active .hamburger-inner {
    transition-delay: 0s;
    transition-timing-function: ease-out;
    background-color: transparent !important; }
    .hamburger--emphatic.is-active .hamburger-inner::before {
      left: -48px;
      top: -48px;
      -webkit-transform: translate3d(48px, 48px, 0) rotate(45deg);
              transform: translate3d(48px, 48px, 0) rotate(45deg);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1), -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1); }
    .hamburger--emphatic.is-active .hamburger-inner::after {
      right: -48px;
      top: -48px;
      -webkit-transform: translate3d(-48px, 48px, 0) rotate(-45deg);
              transform: translate3d(-48px, 48px, 0) rotate(-45deg);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1), -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1); }

/*
   * Emphatic Reverse
   */
.hamburger--emphatic-r {
  overflow: hidden; }
  .hamburger--emphatic-r .hamburger-inner {
    transition: background-color 0.125s 0.175s ease-in; }
    .hamburger--emphatic-r .hamburger-inner::before {
      left: 0;
      transition: top 0.05s 0.125s linear, left 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335);
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in;
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, left 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335); }
    .hamburger--emphatic-r .hamburger-inner::after {
      top: 7px;
      right: 0;
      transition: top 0.05s 0.125s linear, right 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335);
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in;
      transition: transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335), top 0.05s 0.125s linear, right 0.125s 0.175s ease-in, -webkit-transform 0.125s cubic-bezier(0.6, 0.04, 0.98, 0.335); }
  .hamburger--emphatic-r.is-active .hamburger-inner {
    transition-delay: 0s;
    transition-timing-function: ease-out;
    background-color: transparent !important; }
    .hamburger--emphatic-r.is-active .hamburger-inner::before {
      left: -48px;
      top: 48px;
      -webkit-transform: translate3d(48px, -48px, 0) rotate(-45deg);
              transform: translate3d(48px, -48px, 0) rotate(-45deg);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: left 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1), -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1); }
    .hamburger--emphatic-r.is-active .hamburger-inner::after {
      right: -48px;
      top: 48px;
      -webkit-transform: translate3d(-48px, -48px, 0) rotate(45deg);
              transform: translate3d(-48px, -48px, 0) rotate(45deg);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1);
      transition: right 0.125s ease-out, top 0.05s 0.125s linear, transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1), -webkit-transform 0.125s 0.175s cubic-bezier(0.075, 0.82, 0.165, 1); }

/*
   * Minus
   */
.hamburger--minus .hamburger-inner::before, .hamburger--minus .hamburger-inner::after {
  transition: bottom 0.08s 0s ease-out, top 0.08s 0s ease-out, opacity 0s linear; }

.hamburger--minus.is-active .hamburger-inner::before, .hamburger--minus.is-active .hamburger-inner::after {
  opacity: 0;
  transition: bottom 0.08s ease-out, top 0.08s ease-out, opacity 0s 0.08s linear; }

.hamburger--minus.is-active .hamburger-inner::before {
  top: 0; }

.hamburger--minus.is-active .hamburger-inner::after {
  bottom: 0; }

/*
   * Slider
   */
.hamburger--slider .hamburger-inner {
  top: 0.5px; }
  .hamburger--slider .hamburger-inner::before {
    top: 7px;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
    transition-duration: 0.15s; }
  .hamburger--slider .hamburger-inner::after {
    top: 14px; }

.hamburger--slider.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
          transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--slider.is-active .hamburger-inner::before {
    -webkit-transform: rotate(-45deg) translate3d(-3.42857px, -6px, 0);
            transform: rotate(-45deg) translate3d(-3.42857px, -6px, 0);
    opacity: 0; }
  .hamburger--slider.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -14px, 0) rotate(-90deg);
            transform: translate3d(0, -14px, 0) rotate(-90deg); }

/*
   * Slider Reverse
   */
.hamburger--slider-r .hamburger-inner {
  top: 0.5px; }
  .hamburger--slider-r .hamburger-inner::before {
    top: 7px;
    transition-property: opacity, -webkit-transform;
    transition-property: transform, opacity;
    transition-property: transform, opacity, -webkit-transform;
    transition-timing-function: ease;
    transition-duration: 0.15s; }
  .hamburger--slider-r .hamburger-inner::after {
    top: 14px; }

.hamburger--slider-r.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, 7px, 0) rotate(-45deg);
          transform: translate3d(0, 7px, 0) rotate(-45deg); }
  .hamburger--slider-r.is-active .hamburger-inner::before {
    -webkit-transform: rotate(45deg) translate3d(3.42857px, -6px, 0);
            transform: rotate(45deg) translate3d(3.42857px, -6px, 0);
    opacity: 0; }
  .hamburger--slider-r.is-active .hamburger-inner::after {
    -webkit-transform: translate3d(0, -14px, 0) rotate(90deg);
            transform: translate3d(0, -14px, 0) rotate(90deg); }

/*
   * Spin
   */
.hamburger--spin .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spin .hamburger-inner::before {
    transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in; }
  .hamburger--spin .hamburger-inner::after {
    transition: bottom 0.1s 0.25s ease-in, -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spin.is-active .hamburger-inner {
  -webkit-transform: rotate(225deg);
          transform: rotate(225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spin.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out; }
  .hamburger--spin.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg);
    transition: bottom 0.1s ease-out, -webkit-transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Spin Reverse
   */
.hamburger--spin-r .hamburger-inner {
  transition-duration: 0.22s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spin-r .hamburger-inner::before {
    transition: top 0.1s 0.25s ease-in, opacity 0.1s ease-in; }
  .hamburger--spin-r .hamburger-inner::after {
    transition: bottom 0.1s 0.25s ease-in, -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.1s 0.25s ease-in, transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.22s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spin-r.is-active .hamburger-inner {
  -webkit-transform: rotate(-225deg);
          transform: rotate(-225deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spin-r.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
    transition: top 0.1s ease-out, opacity 0.1s 0.12s ease-out; }
  .hamburger--spin-r.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
    transition: bottom 0.1s ease-out, -webkit-transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.1s ease-out, transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.22s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Spring
   */
.hamburger--spring .hamburger-inner {
  top: 0.5px;
  transition: background-color 0s 0.13s linear; }
  .hamburger--spring .hamburger-inner::before {
    top: 7px;
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spring .hamburger-inner::after {
    top: 14px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spring.is-active .hamburger-inner {
  transition-delay: 0.22s;
  background-color: transparent !important; }
  .hamburger--spring.is-active .hamburger-inner::before {
    top: 0;
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    -webkit-transform: translate3d(0, 7px, 0) rotate(45deg);
            transform: translate3d(0, 7px, 0) rotate(45deg); }
  .hamburger--spring.is-active .hamburger-inner::after {
    top: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    -webkit-transform: translate3d(0, 7px, 0) rotate(-45deg);
            transform: translate3d(0, 7px, 0) rotate(-45deg); }

/*
   * Spring Reverse
   */
.hamburger--spring-r .hamburger-inner {
  top: auto;
  bottom: 0;
  transition-duration: 0.13s;
  transition-delay: 0s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--spring-r .hamburger-inner::after {
    top: -14px;
    transition: top 0.2s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), opacity 0s linear; }
  .hamburger--spring-r .hamburger-inner::before {
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.1s 0.2s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.13s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--spring-r.is-active .hamburger-inner {
  -webkit-transform: translate3d(0, -7px, 0) rotate(-45deg);
          transform: translate3d(0, -7px, 0) rotate(-45deg);
  transition-delay: 0.22s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--spring-r.is-active .hamburger-inner::after {
    top: 0;
    opacity: 0;
    transition: top 0.2s cubic-bezier(0.33333, 0, 0.66667, 0.33333), opacity 0s 0.22s linear; }
  .hamburger--spring-r.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.1s 0.15s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.13s 0.22s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Stand
   */
.hamburger--stand .hamburger-inner {
  transition: background-color 0s 0.075s linear, -webkit-transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear;
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear, -webkit-transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--stand .hamburger-inner::before {
    transition: top 0.075s 0.075s ease-in, -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--stand .hamburger-inner::after {
    transition: bottom 0.075s 0.075s ease-in, -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--stand.is-active .hamburger-inner {
  -webkit-transform: rotate(90deg);
          transform: rotate(90deg);
  background-color: transparent !important;
  transition: background-color 0s 0.15s linear, -webkit-transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear;
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear, -webkit-transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--stand.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
    transition: top 0.075s 0.1s ease-out, -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--stand.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    transition: bottom 0.075s 0.1s ease-out, -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Stand Reverse
   */
.hamburger--stand-r .hamburger-inner {
  transition: background-color 0s 0.075s linear, -webkit-transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19);
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear;
  transition: transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19), background-color 0s 0.075s linear, -webkit-transform 0.075s 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--stand-r .hamburger-inner::before {
    transition: top 0.075s 0.075s ease-in, -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: top 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--stand-r .hamburger-inner::after {
    transition: bottom 0.075s 0.075s ease-in, -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.075s ease-in, transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.075s 0s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--stand-r.is-active .hamburger-inner {
  -webkit-transform: rotate(-90deg);
          transform: rotate(-90deg);
  background-color: transparent !important;
  transition: background-color 0s 0.15s linear, -webkit-transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1);
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear;
  transition: transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1), background-color 0s 0.15s linear, -webkit-transform 0.075s 0s cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--stand-r.is-active .hamburger-inner::before {
    top: 0;
    -webkit-transform: rotate(-45deg);
            transform: rotate(-45deg);
    transition: top 0.075s 0.1s ease-out, -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: top 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--stand-r.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(45deg);
            transform: rotate(45deg);
    transition: bottom 0.075s 0.1s ease-out, -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s 0.1s ease-out, transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.075s 0.15s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Squeeze
   */
.hamburger--squeeze .hamburger-inner {
  transition-duration: 0.075s;
  transition-timing-function: cubic-bezier(0.55, 0.055, 0.675, 0.19); }
  .hamburger--squeeze .hamburger-inner::before {
    transition: top 0.075s 0.12s ease, opacity 0.075s ease; }
  .hamburger--squeeze .hamburger-inner::after {
    transition: bottom 0.075s 0.12s ease, -webkit-transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.12s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    transition: bottom 0.075s 0.12s ease, transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19), -webkit-transform 0.075s cubic-bezier(0.55, 0.055, 0.675, 0.19); }

.hamburger--squeeze.is-active .hamburger-inner {
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
  transition-delay: 0.12s;
  transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
  .hamburger--squeeze.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0;
    transition: top 0.075s ease, opacity 0.075s 0.12s ease; }
  .hamburger--squeeze.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg);
    transition: bottom 0.075s ease, -webkit-transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1);
    transition: bottom 0.075s ease, transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1), -webkit-transform 0.075s 0.12s cubic-bezier(0.215, 0.61, 0.355, 1); }

/*
   * Vortex
   */
.hamburger--vortex .hamburger-inner {
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1); }
  .hamburger--vortex .hamburger-inner::before, .hamburger--vortex .hamburger-inner::after {
    transition-duration: 0s;
    transition-delay: 0.1s;
    transition-timing-function: linear; }
  .hamburger--vortex .hamburger-inner::before {
    transition-property: top, opacity; }
  .hamburger--vortex .hamburger-inner::after {
    transition-property: bottom, -webkit-transform;
    transition-property: bottom, transform;
    transition-property: bottom, transform, -webkit-transform; }

.hamburger--vortex.is-active .hamburger-inner {
  -webkit-transform: rotate(765deg);
          transform: rotate(765deg);
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1); }
  .hamburger--vortex.is-active .hamburger-inner::before, .hamburger--vortex.is-active .hamburger-inner::after {
    transition-delay: 0s; }
  .hamburger--vortex.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0; }
  .hamburger--vortex.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(90deg);
            transform: rotate(90deg); }

/*
   * Vortex Reverse
   */
.hamburger--vortex-r .hamburger-inner {
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1); }
  .hamburger--vortex-r .hamburger-inner::before, .hamburger--vortex-r .hamburger-inner::after {
    transition-duration: 0s;
    transition-delay: 0.1s;
    transition-timing-function: linear; }
  .hamburger--vortex-r .hamburger-inner::before {
    transition-property: top, opacity; }
  .hamburger--vortex-r .hamburger-inner::after {
    transition-property: bottom, -webkit-transform;
    transition-property: bottom, transform;
    transition-property: bottom, transform, -webkit-transform; }

.hamburger--vortex-r.is-active .hamburger-inner {
  -webkit-transform: rotate(-765deg);
          transform: rotate(-765deg);
  transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1); }
  .hamburger--vortex-r.is-active .hamburger-inner::before, .hamburger--vortex-r.is-active .hamburger-inner::after {
    transition-delay: 0s; }
  .hamburger--vortex-r.is-active .hamburger-inner::before {
    top: 0;
    opacity: 0; }
  .hamburger--vortex-r.is-active .hamburger-inner::after {
    bottom: 0;
    -webkit-transform: rotate(-90deg);
            transform: rotate(-90deg); }

/* 0. General Vars, Mixins, Extends
 *
 *
*/
.collapse {
  padding-left: 0;
  padding-right: 0; }
  .collapse > .row {
    margin-left: 0;
    margin-right: 0; }
    .collapse > .row > [class*="mv"] {
      padding-left: 0;
      padding-right: 0; }

[class*=row].collapse {
  margin-left: 0;
  margin-right: 0; }
  [class*=row].collapse > [class*="mv"] {
    padding-left: 0;
    padding-right: 0; }

.g-title {
  line-height: 1.5em;
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  color: #9b999e; }

.section__title {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 3em;
  margin-bottom: 3em; }
  .section__title .h1, .section__title .h2, .section__title .h3 {
    font-weight: 400; }

.section__block {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 3em; }

.container {
  min-width: 300px; }

/* 1. Header
 * **********************************************************************
 *  
*/
.header-top {
  background-color: #d6d5d7;
  background-color: #d6d5d7;
  background-color: #e8e7e9; }

.menu-top-trigger {
  display: none;
  font-size: 1rem;
  line-height: 1.5em;
  padding: 0.25em 0.75em; }
  .menu-top-trigger:active {
    color: #2491dd; }

.menu-top > li {
  position: relative;
  float: left;
  line-height: 1.5em; }
  .menu-top > li:first-child {
    padding-left: 0; }
  .menu-top > li:hover > a {
    background-color: #5daee6;
    color: #fff; }
  .menu-top > li > a {
    padding: 0.25em 0.75em; }
    .menu-top > li > a:hover {
      color: #1b72ae;
      background-color: #2491dd;
      background-color: #5daee6;
      color: #fff; }

.submenu-top {
  display: none;
  z-index: 200;
  position: absolute;
  left: 0;
  min-width: 180px;
  max-width: 240px;
  padding: 0.75em 0;
  background-color: rgba(255, 255, 255, 0.95); }
  .submenu-top li {
    line-height: 1.5em;
    padding: 0.25em 1.5em; }
    .submenu-top li a:hover {
      color: #1b72ae; }

.menu-top li:hover .submenu-top {
  display: block; }

@media (max-width: 767px) {
  .menu-top-trigger {
    display: block; }
  .menu-top {
    display: none;
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    z-index: 200;
    top: 100%;
    width: 100%;
    width: 100vw;
    background-color: #e8e7e9; }
    .menu-top > li {
      width: 100%; }
      .menu-top > li:active, .menu-top > li:hover {
        background-color: #5daee6;
        color: #ffffff; }
      .menu-top > li:hover > a {
        background: none; }
      .menu-top > li > a {
        float: left;
        padding: 0.75em 1.5em; }
      .menu-top > li.menu-item-has-children > a {
        position: relative; }
        .menu-top > li.menu-item-has-children > a:before {
          content: "";
          position: absolute;
          right: 0;
          top: 50%;
          -webkit-transform: translate(0, -50%) rotate(90deg);
                  transform: translate(0, -50%) rotate(90deg);
          content: "\EA01";
          font-size: 0.5rem;
          font-family: "themify"; }
  .submenu-top {
    display: block;
    z-index: 200;
    box-shadow: none;
    position: static;
    max-width: none;
    float: left;
    width: 100%;
    padding-left: 1.5em;
    padding: 0 0 0 1.5em;
    background-color: #e8e7e9; }
    .submenu-top li {
      padding: 0; }
      .submenu-top li a {
        padding: 0.75em 1.5em;
        border-left: 1px solid #d6d5d7; }
        .submenu-top li a:hover {
          background-color: #5daee6;
          color: #ffffff; }
  /* 
// Pligins integration
.menu-top{
    &>li{

        &.menu-item-has-children a:before{
            @include pseudoelement_right_top(0, 50%);
            transform: translateY(-50%);
            right: 0.5*$l_h;
            width: 2px;
            height: 2px;
            background-color: $grey;            
            border-radius: 50%;
            content: "";
        }
        &>a{
            float: left; clear: both;
            &:hover{
                color: $accent_dark;
            }            
        }

    }
}
 */ }

.users {
  float: right;
  line-height: 1.5em; }
  .users__item {
    float: left;
    padding: 0.25em 0.75em; }
    .users__item--account {
      padding-left: 1.875em;
      position: relative;
      /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);
            width: $fb;   
            height: $fb;   
            background-color: $grey;
        } */ }
    .users__item--wish {
      padding-left: 1.875em;
      position: relative;
      /* 
        &:before{
            @include pseudoelement_left_top(0, 50%);
            transform: translateY(-50%);
            width: $fb;   
            height: $fb;   
            // background-color: $grey;
        } */ }
    .users__item:hover {
      color: #2491dd; }
      .users__item:hover i.users__item-icon {
        color: inherit; }
  .users i.users__item-icon {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 1rem;
    color: #77757b; }
  .users:hover .users__form-outer {
    display: block; }
  .users__form-outer {
    display: none;
    content: "";
    position: absolute;
    left: 0;
    top: 0%;
    z-index: 200;
    top: 100%;
    width: 240px;
    padding: 1.5em;
    background-color: #ffffff; }
  .users__form {
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: -0.75em;
    margin-bottom: -0.75em; }
    .users__form input, .users__form .button {
      /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
      margin-top: 0.75em;
      margin-bottom: 0.75em;
      max-width: none; }

@media (max-width: 767px) {
  .users i.users__item-icon {
    position: relative; }
  .users__form-outer {
    left: auto;
    right: 0; } }

.logo {
  padding-bottom: 1.5em;
  display: block; }
  .logo img {
    display: block;
    width: auto; }

@media (min-width: 480px) {
  .logo {
    padding-bottom: 0; } }

/* 
.header{
    width: 100%;
    height: 100px;
    background-color: $accent_dark;

    @include height_leveling('text');
}
.header-top{
// background-color: $accent_light;
height: 50px;
}
.header-bottom{
background-color: $grey_super_dark;
height: 50px;
}

.logo{
width: 100%;
background-color: #337722;
font-family: Roboto;
    img{
        width: auto; max-width: 100%; height: auto;
    }
}
 */
/* media end */
.header-bottom {
  position: relative;
  padding: 1.5em 0; }

.tools {
  justify-content: flex-end; }
  .tools__item {
    padding-left: 2.25em;
    font-size: 1rem;
    font-weight: 400;
    letter-spacing: 0.025em; }
    .tools__item i.themify {
      content: "";
      position: absolute;
      left: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%);
      font-size: 2rem;
      color: #000000; }
    .tools__item:hover {
      color: #1b72ae; }
      .tools__item:hover i.themify {
        color: #1b72ae; }
  @media (min-width: 1024px) {
    .tools {
      justify-content: flex-start; } }

.contacts__phone {
  padding-left: 0;
  padding-right: 0; }
  .contacts__phone a {
    color: #000000; }
    .contacts__phone a:hover {
      color: #1b72ae; }

.cart__title {
  padding-left: 0;
  padding-right: 0; }

.cart__counter {
  display: inline-block;
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  background-color: #e8e7e9;
  font-size: 1rem;
  line-height: 1.5em;
  text-align: center; }

.search-trigger {
  text-align: center; }
  .search-trigger i.themify {
    position: relative;
    font-size: 1.19rem;
    font-size: 2rem;
    z-index: 100; }

.search {
  display: none; }

.search-modal {
  position: absolute;
  left: 0;
  top: 0;
  z-index: 300;
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  display: none; }
  .search-modal.active {
    display: flex !important;
    align-items: center; }
  .search-modal .container {
    display: flex;
    justify-content: center;
    width: 100%; }
  .search-modal .search {
    width: calc(100% - 60px); }
  .search-modal-close {
    float: right;
    position: relative;
    width: 40px;
    height: 40px;
    color: #000000;
    cursor: pointer; }
    .search-modal-close i.themify {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
      font-size: 1.19rem;
      color: inherit; }
    .search-modal-close:hover {
      color: #1b72ae; }

@media (min-width: 768px) {
  .search-trigger {
    display: none; }
  .search {
    display: block; }
  .search-modal {
    display: none; } }

/* 2. Menu main
 * **********************************************************************
 *
*/
.menu-main-outer {
  background-color: #2491dd;
  margin-bottom: 1.5em; }

.menu-control {
  display: none; }

.menu-main-trigger {
  float: left !important; }

.menu-main {
  float: left;
  width: 100%;
  border-right: 1px solid #5daee6; }

.menu-main > li {
  float: left; }
  .menu-main > li:last-child {
    margin-right: 0; }
  .menu-main > li > a {
    display: block;
    padding: 0.75em 2em;
    border-left: 1px solid #5daee6;
    font-size: 1rem;
    line-height: 1.5em;
    letter-spacing: 0.025em;
    color: #ffffff;
    transition: all 0.3s; }
    .menu-main > li > a:hover {
      background-color: #5daee6; }

/* megamenu */
@media (min-width: 768px) {
  .submenu {
    display: none;
    z-index: 200;
    position: relative;
    position: absolute;
    left: 10px;
    width: 100%;
    width: calc(100% - 2 * 10px);
    padding: 1.5em 2.25em;
    background-color: #ffffff; }
  .menu-main > li:hover > .submenu {
    display: block !important; }
  .submenu > li {
    position: relative;
    float: left;
    width: 33%;
    padding-left: 104px;
    /*temp*/
    /* 
                &:after{
                    position: absolute; left : 0; top : 0;
                    width: 64px;
                    height: 64px;
                    background-color: #ccc;
                }                  
                */ }
    .submenu > li > a {
      /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
      margin-top: 0.75em;
      margin-bottom: 0.75em;
      margin-top: 0;
      display: inline-block;
      font-size: 1.19rem;
      line-height: 1.5em;
      font-weight: 500;
      letter-spacing: 0.05em;
      color: #353437; }
    .submenu > li .submenu__item-image {
      position: absolute;
      left: 0;
      top: 0;
      width: 80px;
      height: 80px;
      padding: 8px;
      display: flex;
      align-items: center;
      border: 1px solid #e8e7e9; }
  .sub-submenu li {
    font-size: 1.19rem;
    line-height: 1.5em; }
    .sub-submenu li a {
      font-size: 1rem;
      font-weight: 400;
      color: #353437; }
      .sub-submenu li a:hover {
        color: #1b72ae; } }

.dropdown, .menu-main-trigger {
  padding: 1.5em 1.5em;
  border-left: 1px solid #5daee6;
  font-size: 1rem;
  line-height: 1.5em;
  color: #ffffff;
  transition: all 0.3s;
  position: relative;
  display: none;
  background-color: #5daee6; }
  .dropdown:before, .menu-main-trigger:before {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    content: "\EA0C";
    font-family: "themify"; }

.dropdown, .menu-main-trigger {
  position: relative;
  float: right; }
  .dropdown.visible, .visible.menu-main-trigger {
    display: block; }
  .dropdown__list {
    display: none;
    content: "";
    position: absolute;
    right: 0;
    top: 100%;
    z-index: 200;
    width: 300px;
    background-color: #5daee6; }
    .dropdown__list > li > a {
      display: block;
      padding: 0.75em 2em;
      border-left: 1px solid #5daee6;
      font-size: 1rem;
      line-height: 1.5em;
      letter-spacing: 0.025em;
      color: #ffffff;
      transition: all 0.3s; }
      .dropdown__list > li > a:hover {
        background-color: #2491dd; }

.dropdown:hover .dropdown__list, .menu-main-trigger:hover .dropdown__list {
  display: block; }

/*
// использование responsive-menu как mobile-menu
@media (max-width: 767px) {
.menu-main{
    border-left: 1px solid $accent_light;
    border: none;
}   
.dropdown{
    float: none;
    margin: 0 auto;
    width: 90%;
    // width: 30%;
    background-color: $accent;
    border: none;
   &__list{
        width: 100%;
   }    
}
} // media
*/
@media (max-width: 767px) {
  .menu-main-trigger {
    display: block; }
  .menu-main {
    display: none;
    position: absolute;
    left: 0;
    top: 100%;
    width: 100%;
    z-index: 200;
    background-color: #2491dd; }
    .menu-main li {
      float: left;
      width: 100%; }
      .menu-main li a {
        background-color: #2491dd;
        display: block;
        padding: 0.75em 2em;
        border-left: 1px solid #5daee6;
        font-size: 1rem;
        line-height: 1.5em;
        letter-spacing: 0.025em;
        color: #ffffff;
        transition: all 0.3s; }
        .menu-main li a:hover, .menu-main li a:active {
          background-color: #5daee6; }
      .menu-main li ul, .menu-main li img {
        padding-left: 2em; }
      .menu-main li img {
        display: none; } }

/* 3. Slider
 * **********************************************************************
 *
*/
.slider-outer .slider,
.section-slider .slider {
  width: 100%;
  height: 414px; }

/* 
.iconfont:before {
    font-family: "myfont";
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
    // speak: none; only necessary if not using the private unicode range (firstGlyph option) 
    text-decoration: none;
    text-transform: none;

    // content: "/uEA0A" ;
    content: "\EA01" ;
}

 */
/* Font icons */
/* 4. edges
 * **********************************************************************
 *  
*/
.edges-outer {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: -0.75em;
  margin-bottom: -0.75em; }

.edges__item {
  position: relative;
  font-size: 1rem;
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  padding-left: 30%;
  padding-right: 20%;
  padding-left: 3rem; }
  .edges__item-icon {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 30%;
    width: auto;
    font-size: 1rem;
    color: #77757b; }
    .edges__item-icon .themify, .edges__item-icon body .owl-carousel .owl-nav button.owl-prev span, body .owl-carousel .owl-nav button.owl-prev .edges__item-icon span,
    .edges__item-icon body .owl-carousel .owl-nav button.owl-next span, body .owl-carousel .owl-nav button.owl-next .edges__item-icon span {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      -webkit-transform: translate(-50%, -50%);
              transform: translate(-50%, -50%);
      width: 30%;
      font-size: 2rem; }
  .edges__item-text {
    font-size: 1rem;
    color: #9b999e; }

@media (min-width: 768px) {
  .edges__item {
    padding-left: 30%;
    border-right: 1px solid #f5f4f5; }
    .edges__item-icon {
      width: 30%; }
  .edges > div:last-child > .edges__item {
    border: none; } }

/* 6. actions
 * **********************************************************************
 *  
*/
.actions__item {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  margin-left: 0;
  margin-right: 0;
  flex-direction: column-reverse; }
  @media (min-width: 480px) {
    .actions__item {
      flex-direction: row; } }
  .actions__item-content {
    position: relative;
    float: left;
    width: 100%;
    padding: 1rem 1.5em;
    background-color: #d6d5d7; }
    @media (min-width: 480px) {
      .actions__item-content {
        width: 50%; } }
  .actions__item-title {
    line-height: 1.2em;
    padding-top: 0.15em;
    padding-bottom: 0.15em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-weight: 300;
    color: #353437;
    letter-spacing: 0.025em; }
  .actions__item-subtitle {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    color: #353437;
    letter-spacing: 0.025em; }
  .actions__item-promocode {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.19rem;
    font-weight: 500;
    letter-spacing: 0.025em;
    color: #1b72ae; }
  .actions__item-link-outer {
    margin-bottom: 1rem;
    font-size: 0.84034rem;
    text-transform: lowercase;
    letter-spacing: 0.025em; }
    @media (min-width: 480px) {
      .actions__item-link-outer {
        position: absolute;
        bottom: 0; } }
  .actions__item-link {
    padding-right: 1rem;
    color: #353437; }
  .actions__item-image {
    float: left;
    width: 100%; }
    @media (min-width: 480px) {
      .actions__item-image {
        width: 50%; } }

/* 5. categories
 * **********************************************************************
 *  
*/
.categories-outer {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: -10px;
  margin-bottom: -10px; }

.categories__item {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 10px;
  margin-bottom: 10px;
  position: relative;
  overflow: hidden;
  padding: 1.5em 1.5em;
  background-color: #2491dd; }
  .categories__item-title-outer {
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    margin-top: 0;
    position: relative; }
  .categories__item-title {
    line-height: 1.2em;
    padding-top: 0.15em;
    padding-bottom: 0.15em;
    padding-left: 0.75rem;
    padding-right: 0.75rem;
    display: inline-block;
    background-color: rgba(255, 255, 255, 0.5);
    letter-spacing: 0.05em;
    color: #353437;
    transition: all, 0.3s; }
  .categories__item-link-outer {
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 0.84034rem;
    text-transform: lowercase;
    letter-spacing: 0.025em;
    padding-left: 0.75rem;
    padding-right: 0.75rem; }
  .categories__item-link {
    padding-right: 1rem;
    color: rgba(255, 255, 255, 0.75);
    transition: all, 0.3s; }
    .categories__item-link:hover {
      color: white; }
      .categories__item-link:hover i.themify {
        transition: all, 0.3s;
        right: -4px; }
  .categories__item-image {
    position: absolute;
    top: 0;
    right: 0;
    margin-top: 1.5em;
    margin-right: 1.5em; }
  .categories__item-1 {
    background: none; }
    .categories__item-1:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #2435dd, #2435dd);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #2435dd 0%, #2435dd 50%, rgba(36, 53, 221, 0.75) 100%); }
    .categories__item-1:hover:before, .categories__item-1.hover:before {
      margin-left: 0%; }
    .categories__item-1:hover .categories__item-title {
      color: #2435dd; }
  .categories__item-2 {
    background: none; }
    .categories__item-2:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #7024dd, #7024dd);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #7024dd 0%, #7024dd 50%, rgba(112, 36, 221, 0.75) 100%); }
    .categories__item-2:hover:before, .categories__item-2.hover:before {
      margin-left: 0%; }
    .categories__item-2:hover .categories__item-title {
      color: #7024dd; }
  .categories__item-3 {
    background: none; }
    .categories__item-3:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #cd24dd, #cd24dd);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #cd24dd 0%, #cd24dd 50%, rgba(205, 36, 221, 0.75) 100%); }
    .categories__item-3:hover:before, .categories__item-3.hover:before {
      margin-left: 0%; }
    .categories__item-3:hover .categories__item-title {
      color: #cd24dd; }
  .categories__item-4 {
    background: none; }
    .categories__item-4:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #dd2491, #dd2491);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #dd2491 0%, #dd2491 50%, rgba(221, 36, 145, 0.75) 100%); }
    .categories__item-4:hover:before, .categories__item-4.hover:before {
      margin-left: 0%; }
    .categories__item-4:hover .categories__item-title {
      color: #dd2491; }
  .categories__item-5 {
    background: none; }
    .categories__item-5:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #dd2435, #dd2435);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #dd2435 0%, #dd2435 50%, rgba(221, 36, 53, 0.75) 100%); }
    .categories__item-5:hover:before, .categories__item-5.hover:before {
      margin-left: 0%; }
    .categories__item-5:hover .categories__item-title {
      color: #dd2435; }
  .categories__item-6 {
    background: none; }
    .categories__item-6:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #dd7024, #dd7024);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #dd7024 0%, #dd7024 50%, rgba(221, 112, 36, 0.75) 100%); }
    .categories__item-6:hover:before, .categories__item-6.hover:before {
      margin-left: 0%; }
    .categories__item-6:hover .categories__item-title {
      color: #dd7024; }
  .categories__item-7 {
    background: none; }
    .categories__item-7:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #ddcd24, #ddcd24);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #ddcd24 0%, #ddcd24 50%, rgba(221, 205, 36, 0.75) 100%); }
    .categories__item-7:hover:before, .categories__item-7.hover:before {
      margin-left: 0%; }
    .categories__item-7:hover .categories__item-title {
      color: #ddcd24; }
  .categories__item-8 {
    background: none; }
    .categories__item-8:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #91dd24, #91dd24);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #91dd24 0%, #91dd24 50%, rgba(145, 221, 36, 0.75) 100%); }
    .categories__item-8:hover:before, .categories__item-8.hover:before {
      margin-left: 0%; }
    .categories__item-8:hover .categories__item-title {
      color: #91dd24; }
  .categories__item-9 {
    background: none; }
    .categories__item-9:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #35dd24, #35dd24);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #35dd24 0%, #35dd24 50%, rgba(53, 221, 36, 0.75) 100%); }
    .categories__item-9:hover:before, .categories__item-9.hover:before {
      margin-left: 0%; }
    .categories__item-9:hover .categories__item-title {
      color: #35dd24; }
  .categories__item-10 {
    background: none; }
    .categories__item-10:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #24dd70, #24dd70);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #24dd70 0%, #24dd70 50%, rgba(36, 221, 112, 0.75) 100%); }
    .categories__item-10:hover:before, .categories__item-10.hover:before {
      margin-left: 0%; }
    .categories__item-10:hover .categories__item-title {
      color: #24dd70; }
  .categories__item-11 {
    background: none; }
    .categories__item-11:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #24ddcd, #24ddcd);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #24ddcd 0%, #24ddcd 50%, rgba(36, 221, 205, 0.75) 100%); }
    .categories__item-11:hover:before, .categories__item-11.hover:before {
      margin-left: 0%; }
    .categories__item-11:hover .categories__item-title {
      color: #24ddcd; }
  .categories__item-12 {
    background: none; }
    .categories__item-12:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to right, #2491dd, #2491dd);
      transition: all 0.3s ease-in-out;
      margin-left: -100%;
      width: 200%;
      margin-left: -100%;
      background: linear-gradient(to right, #2491dd 0%, #2491dd 50%, rgba(36, 145, 221, 0.75) 100%); }
    .categories__item-12:hover:before, .categories__item-12.hover:before {
      margin-left: 0%; }
    .categories__item-12:hover .categories__item-title {
      color: #2491dd; }

@media (max-width: 768px) {
  .categories-outer {
    margin: 0; }
  .categories__item {
    margin: 0;
    height: 70px; } }

.pallete_color-1 {
  background-color: #2435dd; }

.pallete_color-2 {
  background-color: #7024dd; }

.pallete_color-3 {
  background-color: #cd24dd; }

.pallete_color-4 {
  background-color: #dd2491; }

.pallete_color-5 {
  background-color: #dd2435; }

.pallete_color-6 {
  background-color: #dd7024; }

.pallete_color-7 {
  background-color: #ddcd24; }

.pallete_color-8 {
  background-color: #91dd24; }

.pallete_color-9 {
  background-color: #35dd24; }

.pallete_color-10 {
  background-color: #24dd70; }

.pallete_color-11 {
  background-color: #24ddcd; }

.pallete_color-12 {
  background-color: #2491dd; }

.pallete_color-dark-1 {
  background-color: #1b28ae; }

.pallete_color-dark-2 {
  background-color: #571bae; }

.pallete_color-dark-3 {
  background-color: #a11bae; }

.pallete_color-dark-4 {
  background-color: #ae1b72; }

.pallete_color-dark-5 {
  background-color: #ae1b28; }

.pallete_color-dark-6 {
  background-color: #ae571b; }

.pallete_color-dark-7 {
  background-color: #aea11b; }

.pallete_color-dark-8 {
  background-color: #72ae1b; }

.pallete_color-dark-9 {
  background-color: #28ae1b; }

.pallete_color-dark-10 {
  background-color: #1bae57; }

.pallete_color-dark-11 {
  background-color: #1baea1; }

.pallete_color-dark-12 {
  background-color: #1b72ae; }

/* 7. products
 * **********************************************************************
 *  
*/
.products-grid {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: -10px;
  margin-bottom: -10px; }

.product-outer {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 10px;
  margin-bottom: 10px; }
  .product-outer.ds_3 {
    border-right: 1px solid #f5f4f5; }
    .product-outer.ds_3:last-child {
      border-right: none; }

.owl-item .product-outer {
  width: 100%; }

.owl-item.active .product-outer {
  border-right: 1px solid #f5f4f5; }

.owl-item.active:last-child .product-outer {
  border: none; }

.product {
  padding-left: 10px;
  padding-right: 10px; }
  .product__image {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 220px; }
    .product__image img {
      width: auto;
      max-width: 80%;
      max-height: 80%; }
    .product__image:hover {
      opacity: 0.85; }
  .product__title {
    line-height: 1.2em;
    padding-top: 0.15em;
    padding-bottom: 0.15em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.19rem;
    font-weight: 400;
    color: #353437;
    display: block; }
    .product__title:hover {
      color: #1b72ae; }
  .product__parameters-list {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1rem; }
    .product__parameters-list li {
      font-size: inherit;
      color: #77757b; }
      .product__parameters-list li:before {
        content: "";
        margin: 0 0.5em;
        width: 2px;
        height: 2px;
        border-radius: 50%;
        background-color: #d6d5d7;
        display: inline-block;
        vertical-align: middle; }
  .product__code {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 0.84034rem;
    font-size: 0.70616rem;
    font-weight: 400;
    color: #353437; }
    .product__code-value {
      font-weight: 300; }
  .product__price {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.19rem;
    font-weight: bold;
    color: #353437; }
  .product__availability {
    line-height: 1.5em;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 0.84034rem;
    font-weight: 400;
    color: #353437; }
    .product__availability-value {
      font-weight: 500; }
      .product__availability-value--in-stock {
        color: #1b72ae; }
      .product__availability-value--awaiting {
        color: #aea11b; }
      .product__availability-value--none {
        color: #ae1b28; }

.product--viewed .product__price-outer {
  float: left; }

.product--viewed .product__button-outer {
  float: right; }

/* 8. news
 * **********************************************************************
 *  
*/
.news-outer {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: -0.75em;
  margin-bottom: -0.75em; }

.news__item {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em; }
  .news__item-title-outer {
    line-height: 1.2em;
    padding-top: 0.15em;
    padding-bottom: 0.15em;
    height: 1.5em;
    overflow: hidden;
    position: relative;
    text-overflow: ellipsis;
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1.4161rem;
    font-size: 1.19rem;
    font-weight: 300;
    letter-spacing: 0.025em;
    color: #353437; }
  .news__item-title {
    color: #353437; }
  .news__item-text {
    /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    margin-top: 0.75em;
    margin-bottom: 0.75em;
    font-size: 1rem;
    line-height: 1.5em; }
  .news__item-footer {
    display: flex;
    justify-content: space-between;
    padding: 0.75em 0;
    border-top: 1px solid #d6d5d7; }
  .news__item-link-outer {
    float: left;
    font-size: 0.84034rem;
    line-height: 1.5em;
    text-transform: lowercase;
    letter-spacing: 0.05em; }
  .news__item-link {
    padding-right: 1rem;
    color: #353437; }
  .news__item-date {
    align-self: flex-end;
    float: right;
    font-size: 0.84034rem;
    line-height: 1.5em;
    color: #353437; }

/* 9. about
 * **********************************************************************
 *  
*/
.about__title {
  line-height: 1.2em;
  padding-top: 0.15em;
  padding-bottom: 0.15em;
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  margin-top: 0;
  font-size: 1.4161rem;
  font-weight: 300;
  letter-spacing: 0.025em;
  color: #353437; }

/* 10. subscribe
 * **********************************************************************
 *  
*/
.section-subscribe {
  background-color: #2491dd;
  padding: 2.25em 0; }

.subscribe__title {
  font-size: 1.19rem;
  line-height: 1.5em;
  font-weight: 500;
  color: #1b72ae;
  padding-left: 4rem;
  position: relative; }
  .subscribe__title i.themify {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 3rem;
    color: #1b72ae; }

.subscribe__form .field-outer {
  padding-left: 10px;
  padding-right: 10px;
  margin: 1.5em auto;
  float: none; }
  @media (min-width: 1024px) {
    .subscribe__form .field-outer {
      float: left; } }

.subscribe__social {
  margin: 0 auto;
  display: flex;
  justify-content: center;
  margin-top: 1.5em; }
  @media (min-width: 1024px) {
    .subscribe__social {
      margin-top: 0;
      display: block;
      float: right; } }

.form--subscribe input.field-text {
  border-color: #1b72ae; }

/* 11. social-links
 * **********************************************************************
 *  
*/
.social-links li {
  display: inline-block; }
  .social-links li a {
    display: block;
    margin: 0.5rem;
    font-size: 1rem;
    line-height: 1.5em;
    width: 2rem;
    height: 2rem;
    background-color: #1b72ae;
    border-radius: 50%; }

/* 12. footer
 * **********************************************************************
 *  
*/
.footer {
  padding-top: 3em;
  background-color: #e8e7e9; }

.footer__column {
  margin-bottom: 3em; }

.footer__contacts-outer {
  order: 2; }
  @media (min-width: 1024px) {
    .footer__contacts-outer {
      order: 0; } }

.footer__blog-outer {
  order: 3; }

.footer__title {
  font-size: 1rem;
  font-weight: 400;
  color: #77757b;
  letter-spacing: 0.05em;
  line-height: 1.5em;
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em; }
  .footer__title i.themify {
    display: none; }

.footer-bottom {
  padding: 0.75em;
  border: 1px solid #d6d5d7; }

.contacts__item {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  font-size: 14px;
  color: #77757b; }
  .contacts__item-title {
    line-height: 1.5em;
    font-size: 0.84034rem;
    font-size: 14px;
    font-weight: 400;
    letter-spacing: 0.05em; }
  .contacts__item-text {
    line-height: 1.5em;
    font-size: 0.84034rem;
    font-size: 14px;
    font-weight: 300; }
    .contacts__item-text a {
      color: #77757b; }
      .contacts__item-text a:hover {
        color: #1b72ae; }

.menu-footer__item {
  font-size: 0.84034rem;
  line-height: 1.5rem;
  font-weight: 100; }
  .menu-footer__item a {
    color: #77757b; }
    .menu-footer__item a:hover {
      color: #1b72ae; }

.blog-footer__item {
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em; }
  .blog-footer__item-image {
    display: inline-block;
    vertical-align: middle;
    width: 100px !important;
    margin-right: 1.5em;
    font-size: 1rem; }
  .blog-footer__item-conent {
    display: inline-block;
    vertical-align: middle;
    width: calc(100% - 104px - 1.5em);
    font-size: 1rem; }
  .blog-footer__item-title {
    margin-bottom: 0.5em;
    font-size: 0.84034rem;
    line-height: auto;
    font-weight: 100;
    color: #77757b; }
    .blog-footer__item-title:hover {
      color: #1b72ae; }
  .blog-footer__item-date {
    font-size: 0.84034rem;
    line-height: auto;
    font-weight: 100;
    color: #77757b; }

.copyrights {
  line-height: 1.5em;
  /* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  font-size: 0.84034rem;
  font-weight: 100;
  color: #77757b; }

/* Plugins integration */
@media (max-width: 767px) {
  .footer__column {
    margin-bottom: 1.5em; }
  .footer__title.js-accordeon__title {
    position: relative;
    border-bottom: 1px solid #d6d5d7;
    cursor: pointer; }
    .footer__title.js-accordeon__title i.themify {
      content: "";
      position: absolute;
      right: 0;
      top: 50%;
      -webkit-transform: translateY(-50%);
              transform: translateY(-50%);
      font-size: inherit;
      color: inherit;
      display: block;
      content: "\EA0D"; }
    .footer__title.js-accordeon__title.opened i.themify:before {
      content: "\EA0C"; } }

/* A. Plugins
 * **********************************************************************
 *  
*/
body .owl-carousel .owl-stage-outer {
  width: 100%; }

body .owl-carousel .owl-item img {
  width: auto; }

body .owl-carousel .owl-nav {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%; }
  body .owl-carousel .owl-nav button.owl-prev,
  body .owl-carousel .owl-nav button.owl-next {
    position: absolute;
    top: 50%;
    font-size: 0; }
    body .owl-carousel .owl-nav button.owl-prev span,
    body .owl-carousel .owl-nav button.owl-next span {
      color: transparent; }
    body .owl-carousel .owl-nav button.owl-prev.owl-prev,
    body .owl-carousel .owl-nav button.owl-next.owl-prev {
      left: 0;
      -webkit-transform: translateX(-100%);
              transform: translateX(-100%); }
      body .owl-carousel .owl-nav button.owl-prev.owl-prev span:before,
      body .owl-carousel .owl-nav button.owl-next.owl-prev span:before {
        -webkit-transform: rotate(180deg);
                transform: rotate(180deg);
        font-size: 3rem;
        color: #9b999e; }
    body .owl-carousel .owl-nav button.owl-prev.owl-next,
    body .owl-carousel .owl-nav button.owl-next.owl-next {
      right: 0;
      -webkit-transform: translateX(100%);
              transform: translateX(100%); }
      body .owl-carousel .owl-nav button.owl-prev.owl-next span:before,
      body .owl-carousel .owl-nav button.owl-next.owl-next span:before {
        font-size: 3rem;
        color: #9b999e; }
    body .owl-carousel .owl-nav button.owl-prev:hover span:before,
    body .owl-carousel .owl-nav button.owl-next:hover span:before {
      color: #1b72ae; }

body .owl-carousel .owl-stage > .active:nth-child(4) {
  background-color: #ccc; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
