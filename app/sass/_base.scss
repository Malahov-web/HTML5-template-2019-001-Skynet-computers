/*
 * .Base
 *
*/

// @import 'hexagon';      // 
// @import 'hexagon_bg';   // 


/*
 * Variables
*/


/* Colors */
$accent: #2491dd;
$accent_light: lighten($accent, 13%);  // #5daee6;   // #5fafe6 
$accent_dark: darken($accent, 11%); // #1b72ae;  // #1b6aa1

$grey : #9b999e;
$grey_light: lighten($grey, 23%); // $grey_super_light: lighten($grey_light, 12%);  // f5f4f5
$grey_lighter: lighten($grey, 30%);  //  e8e7e9
$grey_super_light: lighten($grey, 35%);  //  f5f4f5
$grey_dark: darken($grey, 14%); // 77757b;
$grey_super_dark: darken($grey, 40%); // 353437
// https://coolors.co/2491dd-9b999e-dac6b5-f1d6b8-fbacbe
//eae8eb

// Semantic colors
$text: $grey_super_dark;
$white: #ffffff;
$black: #000000;


@mixin pallete_colors($main_color, $deg) {

    // $color_1: adjust-hue($main_color, 30deg);
    $color_1: adjust-hue($main_color, $deg);
    background-color: $color_1;
    
}


$success_color: #35dd24;
$error_color  : #dd2435;
$warning_color: #ddcd24;
$info_color   : #2491dd;


/* Fonts */
$fb : 1rem;

$font_coeff : 1.19;
$font_h4    : $fb * $font_coeff;
$font_h3    : $font_h4 * $font_coeff;
$font_h2    : $font_h3 * $font_coeff;
$font_h1    : $font_h2 * $font_coeff;

$font_small   : $fb * 1/$font_coeff;
$font_smaller : $font_small * 1/$font_coeff;

// Semantical fonts
$font_forms_elements: $fb;


$l_s:  0.025em;
$l_s_big:  0.05em;


$l_h : 1.5em;
$l_h_head: 1.2em;


$font_family : "Roboto",  Verdana,  Arial, sans-serif;
$font_family_head : "Roboto",  Tahoma,  Arial, sans-serif;

$zindex_icon: 100;
$zindex_nav: 200;

/*
 * Mixins
*/
@mixin height_leveling($type){
    $padding_leveling: (1.5em - 1.2em) / 2;
    // line-height: $l_h_head; 

    @if $type == heading {
        line-height: $l_h_head;
        padding-top: $padding_leveling;
        padding-bottom: $padding_leveling;        
    } @else if $type == heading_bg {
        line-height: $l_h_head;
        padding-top: $padding_leveling;
        padding-bottom: $padding_leveling;
    } @else if $type == text {
        line-height: $l_h;
    } @else if $type == forms_element {
        line-height: $l_h;
        padding-top: 0.333334 * $l_h;
        padding-bottom: 0.333334 * $l_h;
    } @else {
        
    }

}


@mixin v_rhytm($type, $lh) {
/* 
//
margin-top: -10px;
margin-bottom: -10px;

row: 
    - margin-top - 
        работает в padding, 
        НЕ работает в content
        НЕ работает в margin
    - margin-bottom - не работает
row-line:
    - margin-bottom - работает
row-flex:
    - margin-top - НЕ работате, верстка ломается если нет margin у соседа
    - margin-bottom - работает
;


Итог:

для -flex и -line отрицательные маргины работют,
если они уезжают на место других margin.


Вывод:

Возможно использовать компенсирующие -margin,
если


*/
    @if $type == heading {
        // line-height: $l_h_head;
        // padding-top: $padding_leveling;
        // padding-bottom: $padding_leveling;  

    } @else if $type == text {
        margin-top: $lh * 0.5;
        margin-bottom: $lh * 0.5;
    } 

      @else if $type == section {
        padding-bottom: $lh * 2;
    } @else if $type == section-title {
        margin-top: 2 * $l_h;
        margin-bottom: 2 * $l_h;
  
    } @else if $type == section-block {
        margin-top: 2 * $l_h;
        // margin-bottom: 2 * $l_h;
  
    }
     @else if $type == block {
        // padding-bottom: $lh * 2;
        margin-top: -0.5 * $l_h;
        margin-bottom: -0.5 * $l_h;         
    } @else if $type == item {
        // margin-bottom: $lh * 1;
        margin-top: $lh * 0.5;
        margin-bottom: $lh * 0.5;
    }
     @else if $type == block-card {
        margin-top: -$columns_gap+px;
        margin-bottom: -$columns_gap+px;
    }     @else if $type == card {
        margin-top: $columns_gap+px;
        margin-bottom: $columns_gap+px;
    } @else {
        
    }    
}

@mixin h_rhytm($type, $fs) {

    @if $type == forms_element {
        padding-left: 20px;  
        padding-right: 20px;
        padding-left: $fs * 1.25;
        padding-right: $fs * 1.25;         
    }  
}


@mixin pseudoelement_left_top($value1, $value2){
    content : "";
    position : absolute; left : $value1; top : $value2; 
}
@mixin pseudoelement_right_top($value1, $value2){
    content : "";
    position : absolute; right : $value1; top : $value2; 
}

/*
 * Extends
*/
%fullscreen{
    // position: relative; height: 100%;
    width: 100%; height: 100vh;    
}
%fullheight{
    position: relative; height: 100%;
    // width: 100%; height: 100vh;    
}
%clearfix{
    float: left;
    width: 100%;
    &:after{
        // content: "";
        // display: table;
        // float: left;
        // width: 100%;
    }
}
%shadow{
    // box-shadow: 0 0 8px 0px opacify($grey_super_dark, 0.1); 
    box-shadow: 0 0 8px 0px transparentize($grey_super_dark, 0.75); 
}
%top_list_item_link{
    display: block;
    color: $text;
    font-weight: 300;
    font-size: $font_small;
    // line-height: $l_h;
    line-height: inherit;
    color: $grey_dark;
}
%link_decor{
    color: $text;
    .themify{

    }
    &:hover{
        color: $accent_dark;
    }

}
%link_with_icon{
    position: relative;

    i.themify{               
        @include pseudoelement_right_top(0, 50%);
        transform: translateY(-50%);
        font-size: 1 * $fb; font-size: 85%;
    }    
}

/*
 * Mixins
*/

// @mixin pseudoelement_left_top($value1, $value2){
//     content : "";
//     position : absolute; left : $value1; top : $value2; 
// }
// @mixin pseudoelement_right_top($value1, $value2){
//     content : "";
//     position : absolute; right : $value1; top : $value2; 
// }

/*
 * Mixins
*/
$browser-context: 16;
@function em($pixels, $context: $browser-context) {
    @return #{$pixels/$context}em;
}

/*
 * Base
*/

html{
    font-size : 14px;
    height: 100%;
}
body{
    font-size : inherit;
    // line-height : $l_h;
    font-family : $font_family;
    height: 100%;   
    margin: 0;
    font-weight: 300;
}

*{
    box-sizing: border-box;
}

a{
    text-decoration : none;
}
ul, ol{
    margin: 0 ; padding: 0;
    list-style: none;
}
h1, h2, h3, h4,
.h1, .h2, .h3, .h4{
    margin: 0;
    line-height: $l_h_head;
    font-family: $font_family_head;
    // font-weight: bold;
    // letter-spacing: $l_s_big;
}
h1, .h1{
    font-size: $font_h1;
}
h2, .h2{
    font-size: $font_h2;
}
h3, .h3{
    font-size: $font_h3;
}
h4, .h4{
    font-size: $font_h4;
}

// .h1{
//     letter-spacing: $l_s;
// }
// .h2{

// }


p{
    margin-top: 0;
    margin-bottom: 1em;
    font-size: $fb;
    line-height: $l_h;
    font-weight: 300;

}
img{
    display: block;
    max-width: 100%; width: 100%; height: auto;
}

.themify:before,
.themify:after{
    vertical-align: middle;
    display: block;
}




@import 'components';     // 

.section-component {
    margin: 2 * $l_h 0;
}
